apiVersion: v1
kind: Service
metadata:
  name: django-backend-service
spec:
  selector:
    app: django-backend
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30006

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-backend
  template:
    metadata:
      labels:
        app: django-backend
    spec:
      containers:
        - name: django-backend
          image: mallaashutosh/backend:1.10
          ports:
            - containerPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30003
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s  # How often to scrape targets

    scrape_configs:
      - job_name: 'stock_metrics'
        metrics_path: '/stockapp/stock-price-metrics/'
        static_configs:
          - targets: ['django-backend-service:8000']

    rule_files:
      - 'alerts.yml'

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - 'alertmanager:9093'
  alerts.yml: |
    groups:
      - name: stock_alerts
        rules:
          - alert: StockPriceChange
            expr: stock_price_change_percentage > 5
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Stock price change alert"
              description: "The stock price has changed by more than 5%."
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:latest
        ports:
        - containerPort: 9093
        volumeMounts:
        - name: alertmanager-config
          mountPath: /etc/alertmanager
      volumes:
      - name: alertmanager-config
        configMap:
          name: alertmanager-config
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
spec:
  type: NodePort
  selector:
    app: alertmanager
  ports:
    - port: 9093
      targetPort: 9093
      nodePort: 30004
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'malla2ashutosh@gmail.com'
      smtp_auth_username: 'malla2ashutosh@gmail.com'
      smtp_auth_password: 'gqytkawuxuliauje'
      smtp_require_tls: true

    receivers:
      - name: 'email_notifications'
        email_configs:
          - to: 'nishantddubey4@gmail.com'
            send_resolved: true

    route:
      receiver: 'email_notifications'
      group_by: ['alertname']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 24h
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30010